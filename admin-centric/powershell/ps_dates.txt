Handling dates in PowerShell is essential for many scripting and automation tasks. PowerShell provides a variety of ways to work with dates. Here are some common tasks and how to handle them:

1. Get the Current Date and Time:
   You can use the `Get-Date` cmdlet to obtain the current date and time.

   ```powershell
   $currentDate = Get-Date
   ```

2. Format Dates:
   You can format dates using the `ToString` method to display them in a specific format.

   ```powershell
   $formattedDate = Get-Date -Format "yyyy-MM-dd HH:mm:ss"
   ```

3. Create a Specific Date:
   You can create a custom date using the `Get-Date` cmdlet and specifying the year, month, day, and time.

   ```powershell
   $customDate = Get-Date -Year 2023 -Month 4 -Day 15 -Hour 14 -Minute 30 -Second 0
   ```

4. Date Arithmetic:
   You can perform arithmetic operations on dates. For example, you can add or subtract days, hours, or minutes.

   ```powershell
   $newDate = (Get-Date).AddDays(7)
   ```

5. Compare Dates:
   To compare two dates, you can use comparison operators like `-lt` (less than), `-le` (less than or equal to), `-gt` (greater than), and `-ge` (greater than or equal to).

   ```powershell
   $date1 = Get-Date
   $date2 = Get-Date "2023-01-01"
   if ($date1 -lt $date2) {
       Write-Host "date1 is earlier than date2"
   }
   ```

6. Calculate Date Differences:
   To calculate the difference between two dates, you can use the `New-TimeSpan` cmdlet.

   ```powershell
   $date1 = Get-Date "2023-01-01"
   $date2 = Get-Date "2023-02-15"
   $timeSpan = New-TimeSpan -Start $date1 -End $date2
   Write-Host "The difference is $($timeSpan.Days) days."
   ```

7. Parsing Dates:
   You can parse date strings into DateTime objects using `Get-Date`.

   ```powershell
   $dateString = "2023-10-23 12:00:00"
   $parsedDate = Get-Date $dateString
   ```

8. Working with Time Zones:
   PowerShell allows you to work with time zones. You can convert dates between different time zones using the `Get-TimeZone` and `Set-TimeZone` cmdlets.

   ```powershell
   $timeZone = Get-TimeZone "Pacific Standard Time"
   Set-TimeZone -Id "Eastern Standard Time"
   ```

These are some of the basic date handling techniques in PowerShell. PowerShell provides extensive date and time manipulation capabilities, and you can further explore them in the official documentation and by using the `Get-Help` cmdlet to access help for specific date-related cmdlets and functions.